# #!/bin/bash

# LOGFILE="/tmp/custom_wake_debug.log"

# # Start clean, log everything
# : > "$LOGFILE"
# exec >> "$LOGFILE" 2>&1

# echo "==== Script run at $(date) ===="
# echo "User: $(whoami)"
# echo "UID: $(id -u)"
# echo "PATH: $PATH"
# echo "----"

# echo "[step] Saving environment vars to /tmp/env_from_yabai.txt"
# env > /tmp/env_from_yabai.txt

# # Determine which display is primary
# UUID_OUTPUT=$(/opt/homebrew/bin/yabai -m query --displays | /opt/homebrew/bin/jq -r '.[0]."uuid"')
# echo "[step] Primary display UUID: $UUID_OUTPUT"

# if [ "$UUID_OUTPUT" = "37D8832A-2D66-02CA-B9F7-8F30A301B230" ]; then
#     echo "[step] Using MacBook Pro Speakers"
#     /opt/homebrew/bin/SwitchAudioSource -s "MacBook Pro Speakers"
#     if [ $? -ne 0 ]; then
#         echo "[ERROR] Failed to set audio to MacBook Pro Speakers" >> "$LOGFILE"
#     else
#         echo "[INFO] Audio set to MacBook Pro Speakers" >> "$LOGFILE"
#     fi
# else
#     echo "[step] Using SoundID Reference"
#     /opt/homebrew/bin/SwitchAudioSource -s "SoundID Reference"
#     if [ $? -ne 0 ]; then
#         echo "[ERROR] Failed to set audio to SoundID Reference" >> "$LOGFILE"
#     else
#         echo "[INFO] Audio set to SoundID Reference" >> "$LOGFILE"
#     fi
#     sleep 3

#     echo "[step] Sending MIDI: cc 1 1"
#     /opt/homebrew/bin/sendmidi dev "IAC Driver SID" cc 1 1
#     if [ $? -ne 0 ]; then
#         echo "[ERROR] Failed to send MIDI cc 1 1" >> "$LOGFILE"
#     else
#         echo "[INFO] MIDI cc 1 1 sent" >> "$LOGFILE"
#     fi
#     sleep 3

#     echo "[step] Sending MIDI: cc 0 127"
#     /opt/homebrew/bin/sendmidi dev "IAC Driver SID" cc 0 127
#     if [ $? -ne 0 ]; then
#         echo "[ERROR] Failed to send MIDI cc 0 127" >> "$LOGFILE"
#     else
#         echo "[INFO] MIDI cc 0 127 sent" >> "$LOGFILE"
#     fi
# fi

# sleep 1

# echo "[step] Killing coreaudiod (sudo)"
# sudo /usr/bin/killall coreaudiod
# if [ $? -ne 0 ]; then
#     echo "[ERROR] Failed to kill coreaudiod" >> "$LOGFILE"
# else
#     echo "[INFO] coreaudiod killed" >> "$LOGFILE"
# fi

# sleep 1

# echo "[step] Restarting yabai"
#  /opt/homebrew/bin/yabai --restart-service
# if [ $? -ne 0 ]; then
#     echo "[ERROR] Failed to restart yabai" >> "$LOGFILE"
# else
#     echo "[INFO] yabai restarted" >> "$LOGFILE"
# fi

# sleep 1

# echo "[step] Reloading sketchybar"
# /opt/homebrew/bin/sketchybar --reload
# if [ $? -ne 0 ]; then
#     echo "[ERROR] Failed to reload sketchybar" >> "$LOGFILE"
# else
#     echo "[INFO] sketchybar reloaded" >> "$LOGFILE"
# fi

# sleep 3.7

# CURRENT_AUDIO=$(/opt/homebrew/bin/SwitchAudioSource -c)
# echo "[step] Current audio output: $CURRENT_AUDIO"

# if [[ "$CURRENT_AUDIO" == "SoundID Reference" ]]; then
#     echo "[step] Triggering skhd hotkey (shift + alt - f16)"
#     /opt/homebrew/bin/skhd -k "shift + alt - f16"
#     if [ $? -ne 0 ]; then
#         echo "[ERROR] Failed to trigger skhd hotkey" >> "$LOGFILE"
#     else
#         echo "[INFO] skhd hotkey triggered" >> "$LOGFILE"
#     fi
# else
#     echo "[step] No hotkey triggered"
# fi

echo "==== Script finished ===="




# #!/bin/bash

# LOGFILE="/tmp/custom_wake_debug.log"

# # Start clean, log everything
# : > "$LOGFILE"
# exec >> "$LOGFILE" 2>&1

# echo "==== Script run at $(date) ===="
# echo "User: $(whoami)"
# echo "UID: $(id -u)"
# echo "PATH: $PATH"
# echo "----"

# echo "[step] Saving environment vars to /tmp/env_from_yabai.txt"
# env > /tmp/env_from_yabai.txt

# # Determine which display is primary
# UUID_OUTPUT=$(/opt/homebrew/bin/yabai -m query --displays | /opt/homebrew/bin/jq -r '.[0]."uuid"')
# echo "[step] Primary display UUID: $UUID_OUTPUT"

# if [ "$UUID_OUTPUT" = "37D8832A-2D66-02CA-B9F7-8F30A301B230" ]; then
#     echo "[step] Using MacBook Pro Speakers"
#     /opt/homebrew/bin/SwitchAudioSource -s "MacBook Pro Speakers"
# else
#     echo "[step] Using SoundID Reference"
#     /opt/homebrew/bin/SwitchAudioSource -s "SoundID Reference"
#     sleep 3

#     echo "[step] Sending MIDI: cc 1 1"
#     /opt/homebrew/bin/sendmidi dev "IAC Driver SID" cc 1 1
#     sleep 3

#     echo "[step] Sending MIDI: cc 0 127"
#     /opt/homebrew/bin/sendmidi dev "IAC Driver SID" cc 0 127
# fi

# sleep 1

# echo "[step] Killing coreaudiod (sudo)"
# sudo /usr/bin/killall coreaudiod

# sleep 1

# echo "[step] Restarting yabai"
#  /opt/homebrew/bin/yabai --restart-service

# sleep 1

# echo "[step] Reloading sketchybar"
# /opt/homebrew/bin/sketchybar --reload

# sleep 3.7

# CURRENT_AUDIO=$(/opt/homebrew/bin/SwitchAudioSource -c)
# echo "[step] Current audio output: $CURRENT_AUDIO"

# if [[ "$CURRENT_AUDIO" == "SoundID Reference" ]]; then
#     echo "[step] Triggering skhd hotkey (shift + alt - f16)"
#     /opt/homebrew/bin/skhd -k "shift + alt - f16"
# else
#     echo "[step] No hotkey triggered"
# fi

# echo "==== Script finished ===="




#!/bin/bash

exec 200>/tmp/.custom_wake.lock
flock -n 200 || exit 0

if [ "$(/opt/homebrew/bin/yabai -m query --displays | /opt/homebrew/bin/jq -r '.[0]."uuid"')" = "37D8832A-2D66-02CA-B9F7-8F30A301B230" ]; then
    /opt/homebrew/bin/SwitchAudioSource -s "MacBook Pro Speakers" &> /dev/null
else
    /opt/homebrew/bin/SwitchAudioSource -s "SoundID Reference" &> /dev/null
    sleep 1
    /opt/homebrew/bin/sendmidi dev "IAC Driver SID" cc 1 1
    sleep 1
    /opt/homebrew/bin/sendmidi dev "IAC Driver SID" cc 0 127
fi
sleep 1
sudo killall coreaudiod
/opt/homebrew/bin/sketchybar --reload
sleep 3.7
if [[ "$(/opt/homebrew/bin/SwitchAudioSource -c)" == "SoundID Reference" ]]; then
    /opt/homebrew/bin/skhd -k "shift + alt - f16"
fi
sleep 1
/opt/homebrew/bin/yabai --restart-service
