#!/bin/bash

pos=1
while [[ "$#" -gt 0 ]]; do
  case $1 in
    -f|--focus)
      if [ "$2" = "prev" ]; then
        pos=-1
      else
        pos=1
      fi
      shift
      ;;
  esac
  shift
done

cur="$(yabai -m query --windows --window 2>/dev/null)"
[ -z "$cur" ] && exit 0

app="$(printf '%s' "$cur" | jq -r '.app // ""')"
id="$(printf '%s' "$cur" | jq -r '.id // empty')"

lower_app="$(printf '%s' "$app" | tr '[:upper:]' '[:lower:]')"

# collect all ids whose .app matches case-insensitively
wins_ids=()
while IFS=$'\t' read -r wid wapp; do
  wapp_lc="$(printf '%s' "$wapp" | tr '[:upper:]' '[:lower:]')"
  if [ "$wapp_lc" = "$lower_app" ]; then
    wins_ids+=("$wid")
  fi
done < <(yabai -m query --windows --space 2>/dev/null | jq -r '.[] | "\(.id)\t\(.app // "")"')

[ "${#wins_ids[@]}" -eq 0 ] && exit 0

# sort ids numerically (creation id order)
wins_sorted=()
while IFS= read -r w; do wins_sorted+=("$w"); done < <(printf '%s\n' "${wins_ids[@]}" | sort -n)

len=${#wins_sorted[@]}

# find index of current id
idx=-1
for i in "${!wins_sorted[@]}"; do
  if [ "${wins_sorted[i]}" = "$id" ]; then idx=$i; break; fi
done

if [ "$idx" -lt 0 ]; then
  next="${wins_sorted[0]}"
else
  next_idx=$(( (idx + pos + len) % len ))
  next="${wins_sorted[$next_idx]}"
fi

yabai -m window --focus "$next"

# #!/bin/bash

# pos=1
# while [[ "$#" -gt 0 ]]; do
#   case $1 in
#     -f|--focus)
#       if [ "$2" = "prev" ]; then
#         pos=-1
#       else
#         pos=1
#       fi
#       shift
#       ;;
#   esac
#   shift
# done

# cur="$(yabai -m query --windows --window)"
# app="$(printf '%s' "$cur" | jq -r '.app')"
# id="$(printf '%s' "$cur" | jq '.id')"

# # all windows of this app on current space, sorted by creation id
# wins="$(yabai -m query --windows --space | jq --arg app "$app" '[.[] | select(.app==$app) | .id] | sort')"
# len="$(printf '%s' "$wins" | jq 'length')"
# [ "$len" -eq 0 ] && exit 0

# idx="$(printf '%s' "$wins" | jq --argjson id "$id" 'index($id)')"
# if [ "$idx" = "null" ]; then
#   next="$(printf '%s' "$wins" | jq '.[0]')"
# else
#   next="$(printf '%s' "$wins" | jq --argjson idx "$idx" --argjson pos "$pos" --argjson len "$len" '.[(($idx + $pos + $len) % $len)]')"
# fi

# yabai -m window --focus "$next"

# while [[ "$#" -gt 0 ]]
#   do
#     case $1 in
#       -f|--focus)
#         if [ "$2" = "prev" ]
#         then
#           pos=-1
#         else
#           pos=1
#         fi
#         ;;
#     esac
#     shift
#   done

# pos=${pos:-1}

# focus="$(yabai -m query --windows | \
#     jq -e --argjson pos $pos '(.[] | select(."has-focus")) as {$id, $app}
#       | map( select( .app==$app and ((."is-hidden" or ."is-minimized") | not) ) )
#       | sort_by(.space, .frame.x, .frame.y)
#       | map(.id)
#       | .[(index($id)+($pos))%length]'
#   )"

# yabai -m window --focus "$focus"

# LAST FROM YABAI GITHUB THREAD : NOT WHAT I WANT!
